worker_processes auto;

events {
worker_connections 1024;
}

http {

    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    include /etc/nginx/mime.types;
    sendfile on;
    keepalive_timeout 65;
    http2 on;

#     upstream backend {
#         server http://192.168.1.151:3000 max_fails=3 fail_timeout=5s;
#         #server nextjs1:3000 max_fails=3 fail_timeout=5s;
#         server nextjs2:3000 backup; # резервный сервер
#     }

    # Блок по умолчанию для localhost
    server {
        listen 80 default_server;
        server_name _;

            root /usr/share/nginx/ip;
            index index.html;

        location / {
            try_files $uri $uri/ =404;
        }
    }

    # Сайт 1
    server {
        listen 80;
        server_name gamerecords.site;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }
    server {
        listen 443 ssl;
        server_name gamerecords.site;

        ssl_certificate /etc/letsencrypt/live/gamerecords.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/gamerecords.site/privkey.pem;

        location / {
            root /usr/share/nginx/gamerecords;
            index index.html;
        }
    }

    # Сайт 2
    server {
        listen 80;
        server_name anybet.site www.anybet.site;

        location / {
            return 301 https://anybet.site$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name www.anybet.site;

        ssl_certificate /etc/letsencrypt/live/anybet.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/anybet.site/privkey.pem;


         return 301 https://anybet.site$request_uri;

    }

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name anybet.site;

    ssl_certificate /etc/letsencrypt/live/anybet.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/anybet.site/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/anybet.site/chain.pem;

    # SSL optimization
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 24h;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_stapling on;
    ssl_stapling_verify on;

    # CORS settings
    set $cors_origin "https://anybet.site";
    set $cors_methods "GET, POST, OPTIONS";
    set $cors_headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";

    location / {
        proxy_pass http://192.168.1.151:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_read_timeout 3600;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' $cors_methods always;
        add_header 'Access-Control-Allow-Headers' $cors_headers always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Security headers
        add_header Permissions-Policy "camera=*, microphone=*";
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header Referrer-Policy "strict-origin";

        # Handle OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin;
            add_header 'Access-Control-Allow-Methods' $cors_methods;
            add_header 'Access-Control-Allow-Headers' $cors_headers;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    location /ws {
        proxy_pass http://192.168.1.151:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 86400;

        # WebSocket CORS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin;
            add_header 'Access-Control-Allow-Methods' $cors_methods;
            add_header 'Access-Control-Allow-Headers' $cors_headers;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' $cors_methods always;
        add_header 'Access-Control-Allow-Headers' $cors_headers always;
    }

    # Security headers for all responses
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy "strict-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(self https://anybet.site), camera=(self https://anybet.site)" always;
}

    # Сайт 3
    server {
        listen 80;
        server_name anycoin.site www.anycoin.site;

        location / {
            return 301 https://anycoin.site$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name www.anycoin.site;

        ssl_certificate /etc/letsencrypt/live/anycoin.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/anycoin.site/privkey.pem;

        return 301 https://anycoin.site$request_uri;
    }

    server {
        listen 443 ssl;
        server_name anycoin.site;

        ssl_certificate /etc/letsencrypt/live/anycoin.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/anycoin.site/privkey.pem;

        location / {
            proxy_pass http://nextjs2:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_read_timeout 3600;
        }
    }


    # Сайт 4
    server {
        listen 80;
        server_name ardu.site www.ardu.site;

        location / {
            return 301 https://ardu.site$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name www.ardu.site;

        ssl_certificate /etc/letsencrypt/live/ardu.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ardu.site/privkey.pem;

        return 301 https://ardu.site$request_uri;
    }

    server {
        listen 443 ssl;
        server_name www.ardu.site;

        ssl_certificate /etc/letsencrypt/live/ardu.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ardu.site/privkey.pem;

        return 301 https://ardu.site$request_uri;
    }

        server {
            listen 443 ssl http2;
            server_name ardu.site;

            # SSL конфигурация
            ssl_certificate /etc/letsencrypt/live/ardu.site/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/ardu.site/privkey.pem;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_prefer_server_ciphers on;
            ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256...';

            # Улучшенные настройки безопасности
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-Content-Type-Options "nosniff";
            add_header X-XSS-Protection "1; mode=block";

            # Настройки кеширования SSL
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;

            # Основное приложение
            location / {
                proxy_pass http://192.168.1.151:3005;
                #proxy_pass http://ardua:3000;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_buffering off;
                proxy_read_timeout 3600;

                # Оптимизация для Next.js
                proxy_cache_bypass $http_upgrade;
            }

            # WebSocket endpoint
            location /ws {
                proxy_pass http://192.168.1.151:1444;
                #proxy_pass http://ardua:1444;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;

                # Важные таймауты
                proxy_read_timeout 86400s;
                proxy_send_timeout 86400s;
                proxy_connect_timeout 86400s;
            }

            # Блокируем доступ к скрытым файлам
            location ~ /\.(?!well-known) {
                deny all;
            }

            # Обработка ошибок
            error_page 500 502 503 504 /50x.html;
            location = /50x.html {
                root /usr/share/nginx/html;
            }
        }

    # Сайт 5
    server {
          server_name it-startup.site www.it-startup.site;

            location / {
                return 301 https://it-startup.site$request_uri;
            }

    }
    server {
        listen 443 ssl;
        server_name it-startup.site;
        ssl_certificate /etc/letsencrypt/live/it-startup.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/it-startup.site/privkey.pem;
        root /usr/share/nginx/it-startup;
        index index.html;
        location / {
            try_files $uri $uri/ =404;
        }
    }

    # Сайт 6
    server {
        listen 80;
        server_name site1.local;
        location / {
            root /usr/share/nginx/html/site1;
            index index.html;
        }
    }
    # Сайт 7
    server {
        listen 80;
        server_name site2.local;
        location / {
            root /usr/share/nginx/html/site2;
            index index.html;
        }
    }
}